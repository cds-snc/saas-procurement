name: Docker build and push to staging

on:
  push:
    branches:
      - main

env:
  GITHUB_SHA: ${{ github.sha }}
  AWS_ACCOUNT: 394954348146 
  REGISTRY: 394954348146.dkr.ecr.ca-central-1.amazonaws.com/saas-procurement
  AWS_REGION: ca-central-1

permissions:
  id-token: write
  contents: write
  pull-requests: write
  actions: write
  checks: write
  statuses: write
  security-events: write


jobs:
  build-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@8f4b7f84864484a7bf31766abe9204da3cbe65b3 # v3.5.0

      - name: Configure AWS credentials using OIDC
        uses: aws-actions/configure-aws-credentials@67fbcbb121271f7775d2e7715933280b06314838 # tag=v1.7.0
        with:
          role-to-assume: arn:aws:iam::${{env.AWS_ACCOUNT}}:role/gh_plan_role
          role-session-name: ECRPush
          aws-region: ${{ env.AWS_REGION }}

      - name: Build image
        working-directory: ./saas_app
        run: |
          docker build \
          --build-arg GIT_SHA=$GITHUB_SHA \
          -t $REGISTRY:$GITHUB_SHA \
          -t $REGISTRY:latest .

      - name: Login to ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@261a7de32bda11ba01f4d75c4ed6caf3739e54be # v1.5.3

      - name: Push image to ECR
        run: |
          docker push $REGISTRY:$GITHUB_SHA
          docker push $REGISTRY:latest
          
      - name: Restart ECS
        run: |
          aws ecs update-service --cluster saas-procurement-ecs-cluster --service saas-procurement-app-service --force-new-deployment > /dev/null 2>&1

      - name: Docker generate SBOM
        uses: cds-snc/security-tools/.github/actions/generate-sbom@cfec0943e40dbb78cee115bbbe89dc17f07b7a0f # v2.1.3    
        with:
          docker_image: "${{ env.REGISTRY }}:latest"
          dockerfile_path: "saas_app/Dockerfile"
          platform: "linux/arm64"
          sbom_name: "saas_procurement"
          token: "${{ secrets.GITHUB_TOKEN }}"

      - name: Logout of Amazon ECR
        run: docker logout ${{ steps.login-ecr.outputs.registry }}
