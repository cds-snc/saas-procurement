name: "Terraform plan"

on:
  workflow_dispatch:
  pull_request:
    paths:
      - "terragrunt/**"
      - ".github/workflows/tf_plan.yml"

env:
  AWS_REGION: ca-central-1
  TERRAFORM_VERSION: 1.6.2
  TERRAGRUNT_VERSION: 0.52.4
  TF_VAR_database_password: ${{ secrets.POSTGRES_PASSWORD }}
  TF_VAR_database_username: ${{ secrets.POSTGRES_USER }}
  TF_VAR_database_name: ${{ secrets.POSTGRES_DB }}
  TF_VAR_saas_app_config: ${{ secrets.APP_CONFIG }}
  TF_VAR_sentinel_customer_id: ${{ secrets.LOG_ANALYTICS_WORKSPACE_ID }}
  TF_VAR_sentinel_shared_key: ${{ secrets.LOG_ANALYTICS_WORKSPACE_KEY }}

permissions:
  id-token: write
  contents: read
  pull-requests: write
  actions: write
  checks: write
  statuses: write

jobs:
  terraform-plan:
    strategy:
      fail-fast: false
      matrix:
        include:
          - module: ssm 
          - module: iam
          - module: hosted_zone
          - module: network 
          - module: load_balancer 
          - module: ecr 
          - module: rds 
          - module: ecs 

    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1

      - name: setup terraform tools
        uses: cds-snc/terraform-tools-setup@v1

      - name: configure aws credentials using OIDC
        uses: aws-actions/configure-aws-credentials@67fbcbb121271f7775d2e7715933280b06314838 # tag=v1.7.0
        with:
          role-to-assume: arn:aws:iam::394954348146:role/gh_plan_role
          role-session-name: TFPlan
          aws-region: ${{ env.AWS_REGION }}

      - name: Terraform plan
        uses: cds-snc/terraform-plan@b84f6e89f3e7b5ecf648a2c036c043c73d82da59 # v3.1.0
        with:
          comment-delete: true
          comment-title: "Staging: ${{ matrix.module }}"
          directory: ./terragrunt/env/staging/${{ matrix.module }}
          github-token: ${{ secrets.GITHUB_TOKEN }}
          terragrunt: true
